<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zw.admin.server.dao.DeviceDao">

	<sql id="where">
		<where>
			<if test="params.id != null and params.id != ''">
				and id = #{params.id} 
			</if>
			<if test="params.sn != null and params.sn != ''">
				and t.sn = #{params.sn}
			</if>
			<if test="params.os != null and params.os != ''">
				and os = #{params.os} 
			</if>
			<if test="params.ip != null and params.ip != ''">
				and ip = #{params.ip} 
			</if>
			<if test="params.status != null and params.status != ''">
				and status = #{params.status} 
			</if>
			<if test="params.createTime != null and params.createTime != ''">
				and create_time = #{params.createTime} 
			</if>
			<if test="params.updatetime != null and params.updatetime != ''">
				and updatetime = #{params.updatetime} 
			</if>
			<if test="params.uptime != null and params.uptime != ''">
				and uptime = #{params.uptime} 
			</if>
			<if test="params.place != null and params.place != ''">
				and dc.place = #{params.place}
			</if>
			<if test="params.cardNumber != null and params.cardNumber != ''">
				and dc.card_number = #{params.cardNumber}
			</if>
			<if test="params.routeId != null and params.routeId != ''">
				and dc.route_id = #{params.routeId}
			</if>
		</where>
	</sql>

	<sql id="selectByMachineId">
		<where>
			<if test="list !=null and list.size >0">
				where machine_id in
				<foreach collection="list" item="item" separator="," open="(" close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</sql>
	<select id="listRF" resultType="Device">
		select t.*,dc.place,dc.card_number,dc.route_id from device t left join device_config dc on t.sn=dc.sn
		<include refid="where" />
	</select>

	<select id="count" resultType="int">
		select count(1) from device t left join device_config dc on t.sn=dc.sn
		<include refid="where" />
	</select>

	<select id="list" resultType="Device">
		select t.*,dc.place,dc.card_number,dc.route_id from device t left join device_config dc on t.sn=dc.sn
		<include refid="where" />
		${params.orderBy}
		limit #{offset}, #{limit}
	</select>

	<update id="update">
		update device t
		<set>
			<if test="sn != null">
				sn = #{sn}, 
			</if>
			<if test="os != null">
				os = #{os}, 
			</if>
			<if test="ip != null">
				ip = #{ip}, 
			</if>
			<if test="status != null">
				status = #{status}, 
			</if>
			<if test="createTime != null">
				create_time = #{createTime}, 
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime}, 
			</if>
			<if test="uptime != null">
				uptime = #{uptime}, 
			</if>

		</set>

		where t.id = #{id}
	</update>

	<select id="webList" resultType="Device">
		select t.*,dc.place,dc.card_number,dc.route_id from device t left join device_config dc on t.sn=dc.sn
		<include refid="where" />
		limit #{offset}, #{limit}
	</select>

	<!--根据sn查询设备是否有配置-->
	<select id="selectDeviceConfig" resultType="com.zw.admin.server.model.DeviceConfig">
		select sn from device_config where sn = #{sn} limit 1
	</select>

	<insert id="insertDeviceConfig" parameterType="com.zw.admin.server.model.DeviceConfig">
	INSERT INTO device_config (
	`sn`,
	`create_time`,
	`place`,
	`card_number`,
	`route_id`
	)
	VALUES
	(
		#{sn}, NOW(), #{place}, #{cardNumber},#{routeId})
	</insert>
	
	<update id="updateDeviceConfig" parameterType="com.zw.admin.server.model.DeviceConfig">
		update device_config
		<set>
		<if test="place != null">
			place = #{place},
		</if>
		<if test="cardNumber != null">
			card_number = #{cardNumber},
		</if>
		<if test="routeId != null">
			route_id = #{routeId},
		</if>
		update_time = NOW()
		</set>
		where sn = #{sn}
	</update>

	<!--总设备数-->
	<select id="selectDeviceNum" resultType="java.util.Map">
		SELECT count(DISTINCT sn) deviceNum,COUNT(DISTINCT place) placeNum from machine_info
	</select>

	<!--总设备数-->
	<select id="selectPlaceNum" resultType="java.lang.Integer">
		SELECT count(DISTINCT place) from device_config
	</select>

	<insert id="save" useGeneratedKeys = "true" keyProperty = "id">
		INSERT INTO device (
			sn,
			os,
			ip,
			STATUS,
			create_time,
			updatetime,
			uptime,
			user_id,
			rups_ver,
			time,
			machine_id
		)
		VALUES
			(
				#{sn},
				#{os},
				#{ip},
				#{status},
				NOW(),
				#{updatetime},
				#{uptime},
				#{userId},
				#{rupsVer},
				#{time},
				#{machineId}
				)
	</insert>
</mapper>
